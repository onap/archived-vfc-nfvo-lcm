# Copyright 2019 ZTE Corporation.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#         http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
from lcm.pub.utils.enumutil import enum

ACTION_TYPE = enum(
    START=1,
    STOP=2,
    REBOOT=3
)
AFFINITY_OR_ANTIAFFIINTY = enum(
    AFFINITY="AFFINITY",
    ANTI_AFFINITY="ANTI_AFFINITY"
)
AFFINITY_OR_ANTIAFFIINTY_SCOPE = enum(
    NFVI_POP="NFVI_POP",
    ZONE="ZONE",
    ZONE_GROUP="ZONE_GROUP",
    NFVI_NODE="NFVI_NODE"
)
AUTH_TYPE = enum(
    BASIC="BASIC",
    OAUTH2_CLIENT_CREDENTIALS="OAUTH2_CLIENT_CREDENTIALS",
    TLS_CERT="TLS_CERT"
)
CHANGE_RESULT = enum(
    COMPLETED='COMPLETED',
    ROLLED_BACK='ROLLED_BACK',
    FAILED='FAILED',
    PARTIALLY_COMPLETED='PARTIALLY_COMPLETED'
)
CHANGE_TYPE = enum(
    ADD='ADD',
    DELETE='DELETE',
    REMOVE='REMOVE',
    INSTANTIATE='INSTANTIATE',
    TERMINATE='TERMINATE',
    SCALE='SCALE',
    UPDATE='UPDATE',
    CHANGE_FLAVOUR='CHANGE_FLAVOUR',
    HEAL='HEAL',
    OPERATE='OPERATE',
    MODIFY='MODIFY',
    MODIFY_INFORMATION='MODIFY_INFORMATION',
    CHANGE_EXTERNAL_VNF_CONNECTIVITY='CHANGE_EXTERNAL_VNF_CONNECTIVITY',
    ADD_LINK_PORT='ADD_LINK_PORT',
    REMOVE_LINK_PORT='REMOVE_LINK_PORT'
)
CP_INSTANCE_TYPE = enum(
    VNFC_CP='VNFC_CP',
    EXT_CP='EXT_CP'
)
DEGREE_HEALING = enum(
    HEAL_RESTORE="HEAL_RESTORE",
    HEAL_QOS="HEAL_QOS",
    HEAL_RESET="HEAL_RESET",
    PARTIAL_HEALING="PARTIAL_HEALING"
)
GRANT_TYPE = enum(
    INSTANTIATE="INSTANTIATE",
    TERMINATE="TERMINATE",
    HEAL_CREATE="Heal Create",
    HEAL_RESTART="Heal Restart",
    OPERATE="OPERATE"
)
HEAL_ACTION_TYPE = enum(
    START="vmCreate",
    RESTART="vmReset"
)
INSTANTIATION_STATE = enum(
    NOT_INSTANTIATED="NOT_INSTANTIATED",
    INSTANTIATED="INSTANTIATED"
)
IPADDRESSES_TYPE = enum(
    IPV4='IPV4',
    IPV6='IPV6'
)
LCM_NOTIFICATION_STATUS = enum(
    START="START",
    RESULT="RESULT"
)
LAYER_PROTOCOL = enum(
    IP_OVER_ETHERNET="IP_OVER_ETHERNET"
)
NFP_STATE = enum(
    ENABLED="ENABLED",
    DISABLED="DISABLED"
)
NOTIFICATION_TYPE = enum(
    NSLCM_OPERATION_OCCURRENCE_NOTIFICATION="NsLcmOperationOccurrenceNotification",
    NS_IDENTIFIER_CREATION_NOTIFICATION="NsIdentifierCreationNotification",
    NS_IDENTIFIER_DELETION_NOTIFICATION="NsIdentifierDeletionNotification",
    NS_CHANGE_NOTIFICATION="NsChangeNotification"
)
NS_COMPOMENT_TYPE = enum(
    VNF="VNF",
    PNF="PNF",
    NS="NS"
)
NS_INST_STATUS = enum(
    EMPTY='empty',
    INSTANTIATING='instantiating',
    TERMINATING='terminating',
    ACTIVE='active',
    FAILED='failed',
    INACTIVE='inactive',
    UPDATING='updating',
    SCALING='scaling',
    HEALING='healing'
)
OPERATION_STATE_TYPE = enum(
    STARTING="STARTING",
    PROCESSING="PROCESSING",
    COMPLETED="COMPLETED",
    FAILED_TEMP="FAILED_TEMP",
    FAILED="FAILED",
    ROLLING_BACK="ROLLING_BACK",
    ROLLED_BACK="ROLLED_BACK"
)
OPERATION_TYPE = enum(
    INSTANTIATE="INSTANTIATE",
    SCALE="SCALE",
    TERMINATE="TERMINATE",
    UPDATE="UPDATE",
    HEAL="HEAL",
)
OPERATIONAL_STATE = enum(
    STARTED="STARTED",
    STOPPED="STOPPED"
)
OPNAME_FOR_CHANGE_NOTIFICATION_TYPE = enum(
    VNF_INSTANTIATE="VNF_INSTANTIATE",
    VNF_SCALE="VNF_SCALE",
    VNF_SCALE_TO_LEVEL="VNF_SCALE_TO_LEVEL",
    VNF_CHANGE_FLAVOUR="VNF_CHANGE_FLAVOUR",
    VNF_TERMINATE="VNF_TERMINATE",
    VNF_HEAL="VNF_HEAL",
    VNF_OPERATE="VNF_OPERATE",
    VNF_CHANGE_EXT_CONN="VNF_CHANGE_EXT_CONN",
    VNF_MODIFY_INFO="VNF_MODIFY_INFO",
    NS_INSTANTIATE="NS_INSTANTIATE",
    NS_SCALE="NS_SCALE",
    NS_UPDATE="NS_UPDATE",
    NS_TERMINATE="NS_TERMINATE",
    NS_HEAL="NS_HEAL"
)
OPOCC_STATUS_FOR_CHANGENOTIFICATION_TYPE = enum(
    START="START",
    COMPLETED="COMPLETED ",
    PARTIALLY_COMPLETED="PARTIALLY_COMPLETED",
    FAILED="FAILED",
    ROLLED_BACK="ROLLED_BACK",
)
OWNER_TYPE = enum(
    VNF=0,
    VNFM=1,
    NS=2
)
PROTOCOL = enum(
    TCP="TCP",
    UDP="UDP",
    ICMP="ICMP"
)
SCALE_TYPE = enum(
    SCALE_NS="SCALE_NS",
    SCALE_VNF="SCALE_VNF"
)
SCALE_VNF_TYPE = enum(
    SCALE_OUT="SCALE_OUT",
    SCALE_IN="SCALE_IN",
    SCALE_TO_INSTANTIATION_LEVEL="SCALE_TO_INSTANTIATION_LEVEL",
    SCALE_TO_SCALE_LEVEL="SCALE_TO_SCALE_LEVEL(S)"
)

SCALING_DIRECTION = enum(
    SCALE_IN="SCALE_IN",
    SCALE_OUT="SCALE_OUT"
)
STOP_TYPE = enum(
    FORCEFUL="FORCEFUL",
    GRACEFUL="GRACEFUL"
)
VNF_STATE = enum(
    STARTED="STARTED",
    STOPPED="STOPPED"
)
CROSSINGDIRECTION_TYPE = enum(
    UP="UP",
    DOWN="DOWN"
)
THRESHOLD_TYPE = enum(
    SIMPLE="Single-valued static threshold"
)
NOTIFICATION_TYPES = enum(
    AlarmNotification="AlarmNotification",
    AlarmClearedNotification="AlarmClearedNotification",
    AlarmListRebuiltNotification="AlarmListRebuiltNotification"
)
EVENT_TYPE = enum(
    COMMUNICATIONS_ALARM="COMMUNICATIONS_ALARM",
    PROCESSING_ERROR_ALARM="PROCESSING_ERROR_ALARM",
    ENVIRONMENTAL_ALARM="ENVIRONMENTAL_ALARM",
    QOS_ALARM="QOS_ALARM",
    EQUIPMENT_ALARM="EQUIPMENT_ALARM"
)
PERCEIVED_SEVERITY_TYPE = enum(
    CRITICAL="CRITICAL",
    MAJOR="MAJOR",
    MINOR="MINOR",
    WARNING="WARNING",
    INDETERMINATE="INDETERMINATE",
    CLEARED="CLEARED"
)
FAULTY_RESOURCE_TYPE = enum(
    COMPUTE="COMPUTE",
    STORAGE="STORAGE",
    NETWORK="NETWORK"
)
ACK_STATE = enum(
    UNACKNOWLEDGED="UNACKNOWLEDGED",
    ACKNOWLEDGED="ACKNOWLEDGED"
)
PACKAGE_OPERATIONAL_STATE_TYPE = enum(
    ENABLED="ENABLED",
    DISABLED="DISABLED"
)
PACKAGE_ONBOARDING_STATE_TYPE = enum(
    CREATED="CREATED",
    UPLOADING="UPLOADING",
    PROCESSING="PROCESSING",
    ONBOARDED="ONBOARDED"
)
PACKAGE_USAGE_STATE_TYPE = enum(
    IN_USE="IN_USE",
    NOT_IN_USE="NOT_IN_USE"
)
CONTAINER_FORMAT = enum(
    AKI="AKI",
    AMI="AMI",
    ARI="ARI",
    BARE="BARE",
    DOCKER="DOCKER",
    OVA="OVA",
    OVF="OVF"
)
DISK_FORMAT = enum(
    AKI="AKI",
    AMI="AMI",
    ARI="ARI",
    ISO="ISO",
    QCOW2="QCOW2",
    RAW="RAW",
    VDI="VDI",
    VHD="VHD",
    VHDX="VHDX",
    VMDK="VMDK"
)
PACKAGE_CHANGE_TYPE = enum(
    OP_STATE_CHANGE="OP_STATE_CHANGE",
    PKG_DELETE="PKG_DELETE"
)
